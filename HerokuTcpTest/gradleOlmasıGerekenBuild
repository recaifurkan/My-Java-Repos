/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.5.1/userguide/tutorial_java_projects.html
 */

/*

git init
git add .
git commit -m "Demo"
heroku create
git push heroku master



 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building a CLI application
    id 'application'
}

compileJava {options.encoding = "UTF-8"}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {



}

application {
    // Define the main class for the application
    mainClassName = 'com.byrfb.App'

}


jar {
    baseName = rootProject.getName()
    version = ''
    manifest {
        attributes "Main-Class": getMainClassName()
        attributes "Class-Path": configurations.runtime.files.collect { "libs/$it.name" }.join(' ')
    }

    // bu alttaki from kısmı eklenen classpathları direk har içine fat jar olrak gömer
//    from {
//        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
//    }
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean

// compile edilenleri veya eklenen libararileri direk jarın yanına kopyalar
// sonra eğer librarileri kulanıyorsan classpatha eklemek için manifest dosyasına classpath diye belirtmen gerekmekte
// Class-Path: jsoup-1.11.3.jar bu şekilde ekleycen manifest dosyasına
task copyToLib(type: Copy) {
    into "$buildDir/libs/libs"
    from(configurations.compile)
}



stage.dependsOn(copyToLib)




gradle.taskGraph.whenReady {
    taskGraph ->
        if (taskGraph.hasTask(stage)) {
            test.enabled = false
        }
}

